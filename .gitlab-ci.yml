variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_FORCE_HTTPS: "true"
    
workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
      variables:
        RELEASE_BUILD: "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

stages:
  - build
  - create_release

build-win-x64-release:
  stage: build
  tags:
    - vs2022
  script:
    - '& msbuild.exe cppcheck.sln -m -p:Configuration=Release -p:Platform=x64'
    - '& ./GitLabCICD/CreateZip.ps1 -CI_COMMIT_TAG $CI_COMMIT_TAG -CI_PIPELINE_IID $CI_PIPELINE_IID'
  artifacts:
    paths:
      - .\ToDeploy\*
    expire_in: 1 week

build-win-x64-debug:
  stage: build
  tags:
    - vs2022
  script:
    - '& msbuild.exe cppcheck.sln -m -p:Configuration=Debug -p:Platform=x64'

create-gitlab-release:
  stage: create_release
  tags:
    - vs2022
  dependencies:
    - build-win-x64-release
  script:
    - '& .\GitLabCICD\CreateGitlabRelease.ps1 -CI_COMMIT_TAG $CI_COMMIT_TAG -CI_PIPELINE_IID $CI_PIPELINE_IID -CI_JOB_TOKEN $CI_JOB_TOKEN -CI_API_V4_URL $CI_API_V4_URL -CI_PROJECT_ID $CI_PROJECT_ID'
  rules:
    - if: $RELEASE_BUILD == "true"
      when: on_success
      allow_failure: false
    - when: never
      allow_failure: true
